- meta:
    title: zzzGetStyleFromBrief
    description: ''
    category: User
    name: _UM2K6w77G-ljoNuHUqwH
  steps:
    - type: say
      selected: false
      message: 'Related styles:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Design premises:
            ```markdown
            {{design.premises}}
            ```

          - Web title: {{web.title}}

          - Supported style list:
            - Feminine
            - Vintage
            - Elegant
            - Clean
            - Smart
            - Classy
            - High-end
            - Luxurious
            - Urban
            - Minimalistic
            - Brutalism
            - Magazine
            - Modern
            - Cute
            - Cartoonish
            - Sci-fi
            - Futuristic
            - High-tech
            - Dystopic
            - Neon
            - Cyber
            - Cyberpunk
            - Watercolor
            - Colorful
            - Retro


        Step goal: Taking into account the web title and design premises, select the 8 styles more
        suitables from the **Supported style list**.


        Step instructions:
          - Respond in English & don't interact with the user.
          - Respond with comma-separated values, for example: Feminine, Vintage, Elegant...

        Step result:
      param: style.related
    - type: say
      selected: false
      message: 'Proposed styles:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related styles: {{style.related}}


        Step goal: From the **related styles**, pick the top 4 styles.


        Step instructions:
          - Respond in {{language}} & don't interact with the user.
          - Respond using this example as a format reference:
            1. 🏢 Modern: A modern design will align with the company's goal of conveying a sense of
              power.
            2. ...

        Step result:
    - type: ask
      selected: true
      param: style.selected
      message: >-
        Please ENTER your preferred style from the above options (e.g., Vibrant).
    - type: gpt
      selected: false
      prompt: >-
        Step Variables:

          - Related Styles: {{style.related}}


        Step goal: Normalize the selected style, {{style.selected}}, getting the closest
        approximation to the related styles.


        Step instructions:
          - Respond in English and don't interact with the user.
          - I just need you to return the result to me without adding any extra content, for
            example: Vibrant

        Step result:
      param: style.selected
    - type: say
      selected: false
      message: 'Related palette configurations:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Design premises:
            ```markdown
            {{design.premises}}
            ```

          - Selected Style: {{style.selected}}
          
          - Color palette specifications:
            * Type: is the type of color palette to generate.
              - Magazine
              - Monochrome
              - 1 color accent
              - 2 colors accent
              - 3 colors accent
            * Range preset: is the hues range preset.
              - Default
              - High Contrast
              - Bright & Light
              - Pastel
              - Vibrant
              - Dark
              - Hyper Color


        Step goal: given the design premises, selected style, and color palette specifications,
        provide the 8 palette generator configurations more suitables.


        Step instructions:
          - Respond in English and don't interact with the user.
          - I just need you to return the result to me without adding any extra content, for
            example:
            1. Type: Monochrome, Range: Default
            2. ...

        Step result:
      param: palette.related
    - type: say
      selected: false
      message: 'Proposed palette configurations:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related palette configurations: {{palette.related}}


        Step goal: from the list of related palette generator configurations, pick the top 4
        configurations.


        Step instructions:
          - Respond in {{language}} & don't interact with the user.
          - Respond using this example as a reference:
            1. 🎨 Type: Monochrome, Range: Vibrant:
              * The vintage style is often depicted with a monochromatic color palette type.
              * The "Vibrant" range will provide the modern touch the client desires while
                maintaining a sense of antiquity.
            2. ...

        Step result:
    - type: ask
      selected: true
      param: palette.config
      message: >-
        Please ENTER your preferred color palette config from the above options (e.g., Type:
        Monochrome, Range: Vibrant)
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related palette configurations: {{palette.related}}


        Step goal: Normalize the selected palette configuration getting the closest approximation to
        the related palette configurations. Selected palette:

        {{palette.config}}


        Step instructions:
          Respond in English and don't interact with the user.
          - I just need you to return the result to me without adding any extra content, for
            example:
            * Type: Monochrome,
            * Range: Vibrant

        Step result:
      param: palette.config
    - type: say
      selected: false
      message: 'Related typographies:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Design premises:
            ```markdown
            {{design.premises}}
            ```

          - Selected Style: {{style.selected}}


        Step goal: Use the design premises, and selected style as a guide for suggesting 10
        different typographies from Google fonts.


        Step instructions:
          - Respond in English and don't interact with the user.
          - Respond with comma-separated values, for example: Open Sans, Avenir...

        Step result:
      param: typographies.related
    - type: say
      selected: false
      message: 'Proposed typographies:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related typographies: {{typographies.related}}


        Step goal: from the list of related typographies, provide 4 proposals by choosing one for
        the titles and another for the rest of the texts. You can choose to use the same font or mix
        them.


        Step instructions:
          - Respond in {{language}} and don't interact with the user.
          - Respond using this example as a format reference:
            1. 📚 Titles: Montserrat & Text: Open Sans: 
              * Montserrat: with its geometric and modern look, is great for titles, aligning with
                the minimalistic and modern design style.
              * Open Sans: is a clean and legible font, suitable for body text, and complements the
                minimalistic and modern design well.
            2. ...

        Step result:
    - type: ask
      selected: true
      param: style.typos
      message: >-
        Please ENTER your preferred typography option from the choices provided (e.g., Titles:
        Roboto, Text: Open Sans).
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related typographies: {{typographies.related}}


        Step goal: Normalize the selected typographies getting the closest approximation to the
        related typographies. Selected typographies:

        {{style.typos}}


        Step instructions:
          - Respond in English and don't interact with the user.
          - I just need you to return the result to me without adding any extra content, for
            example:
            * Titles: Didot
            * Text: Garamond

        Step result:
      param: style.typos
    - type: say
      selected: false
      message: 'Related writer tone configurations:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Design premises:
            ```markdown
            {{design.premises}}
            ```

          - Selected style: {{style.selected}}

          - Selected typographies: {{style.typos}}

          - Writer tone configuration:
            - Funny vs Serious
            - Casual vs Formal
            - Irreverent vs Respectful
            - Enthusiastic vs Matter-of-Fact


        Step goal: considering the design premises, selected style, chosen typographies,
        {{language}} as the current language, and the writer tone configuration, please provide 8
        suitable tone configurations. Each config has to be a combination of 2 or 3 of the 4 writer
        tone.


        Step instructions:
          - Respond in English and don't interact with the user.
          - Use the follow nuances interpretation as a reference, if a nuance is not specified, it
            means is set as Neutral:
            * Funny vs Serious = Funny
            * Casual vs Formal = Casual
            * Irreverent vs Respectful = Neutral
            * Enthusiastic vs Matter-of-Fact = Neutral
          - I just need you to return the result to me without adding any extra content, for
            example:
            1. Funny & Casual
            2. Serious & Casual & Irreverent
            3. ...

        Step result:
      param: tone.related
    - type: say
      selected: false
      message: 'Proposed writer tone configurations:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related writer tones: {{tone.related}}


        Step goal: from the list of related writer tones, pick the top 3 configurations.


        Step instructions:
          - Respond in {{language}} and don't interact with the user.
          - Respond using this example as a format reference:
            1. 📚 Serious, Casual & Respectful: a serious tone aligns with the mysterious and
              futuristic style of the website and with a casual tone maintains a friendly and
              approachable atmosphere (continue the explaination)...
            2. ...

        Step result:
    - type: ask
      selected: true
      param: writer.tone
      message: >-
        Please ENTER your preferred writer tone from the options provided (e.g., Serious, Casual &
        Respectful)
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related writer tones: {{tone.related}}


        Step goal: Normalize the selected writer tone, {{writer.tone}}, getting the closest
        approximation to the related writer tones.


        Step instructions:
          - Respond in English and don't interact with the user.
          - I just need you to return the result to me without adding any extra content, for
            example: Funny & Casual

        Step result:
      param: writer.tone
    - type: say
      selected: false
      message: 'Related web layouts:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Design premises:
            ```markdown
            {{design.premises}}
            ```

          - Selected style: {{style.selected}}

          - Selected typographies: {{style.typos}}

          - Selected writer tone: {{writer.tone}}

          - Color palette: {{palette.config}}

          - Supported web layouts:
            - Single-Column
            - Content-Focused
            - Big-Typography
            - Magazine
            - Grid-Breaking
            - Alternating
            - Full-Screen
            - F-Pattern
            - Z-Pattern
            - Alternating
            - Card-Based
            - Hero
            - Split-Screen
            - Asymmetrical
            - Navigation-Tabs
            - Carousel


        Step goal: taking into account the design premises, selected style, selected typographies,
        selected writer tone and color palette, suggests the 8 web layouts more suitables from the
        **supported web layouts**.

        [Source](https://websitesetup.org/website-layouts/)


        Step instructions:
          - Respond in English and don't interact with the user.
          - Respond with comma-separated values, for example: Single-Column, Content-Focused,
            Big-Typography...

        Step result:
      param: layout.related
    - type: say
      selected: false
      message: 'Proposed web layouts:'
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Related layouts: {{layout.related}}


        Step goal: from the list of **related layouts**, pick the top 4.


        Step instructions:
          - Respond in {{language}} and don't interact with the user.
          - I just need you to return the result to me without adding any extra content, for
            example:
            1. 📚 Columna Única (Single-Column): Un diseño de una sola columna se adapta bien a un
              enfoque minimalista y moderno, permitiendo que el contenido se presente de manera
              clara y concisa.
            2. ...

        Step result:
      param: layout.proposed
    - type: ask
      selected: true
      param: layout.selected
      message: >-
        Please ENTER your preferred layout from the above options (e.g., Big-Typography).
    - type: gpt
      selected: false
      prompt: >-
        Step variables:

          - Proposed layouts: {{layout.proposed}}

          - Selected layout: {{layout.selected}}


        Step goal: Normalize the **selected layout** getting the closest approximation to the
        **proposed layouts**.


        Step instructions:
          - Respond in English and don't interact with the user.
          - I just need you to return the result to me without adding any extra content, for
            example: Carousel

        Step result:
      param: layout.selected
  version: 1
